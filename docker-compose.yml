version: "3.9"


services:
  kafka:
    image: bitnami/kafka:3.7
    container_name: kafka
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_ENABLE_JMX=yes
      - KAFKA_JMX_PORT=5555
      - KAFKA_JMX_HOSTNAME=kafka
    ports:
      - "9092:9092"
      - "5555:5555"
    volumes:
      - kafka_data:/bitnami/kafka
    healthcheck:
      test: [ "CMD-SHELL", "kafka-topics.sh --bootstrap-server localhost:9092 --list || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build: .
    container_name: kafkahello-app
    environment:
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - SERVER_PORT=8080
    depends_on:
      - kafka
    ports:
      - "8080:8080"

  kafka-exporter:
    image: danielqsj/kafka-exporter:latest
    container_name: kafka-exporter
    command: ["--kafka.server=kafka:9092"]
    ports:
      - "9308:9308"
    depends_on:
      - kafka

  kafka-jmx-exporter:
    image: sscaling/jmx-prometheus-exporter:latest
    container_name: kafka-jmx-exporter
    command: "5556 /config.yml"
    volumes:
      - ./jmx-exporter-kafka.yml:/config.yml:ro
    ports:
      - "5556:5556"
    depends_on:
      - kafka

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    command: --config.file=/etc/prometheus/prometheus.yml --storage.tsdb.retention.time=7d
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"
    depends_on:
      - kafka-jmx-exporter
      - kafka-exporter
      - app

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    ports:
      - "3000:3000"
    volumes:
      - ./provisioning/datasources/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml:ro
      - ./provisioning/dashboards:/etc/grafana/provisioning/dashboards
    depends_on:
      - prometheus

volumes:
  kafka_data: